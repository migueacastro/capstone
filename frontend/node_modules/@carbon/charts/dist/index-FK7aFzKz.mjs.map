{"version":3,"file":"index-FK7aFzKz.mjs","sources":["../../../node_modules/lodash-es/flatten.js","../../../node_modules/lodash-es/_flatRest.js","../../../node_modules/lodash-es/_baseSlice.js","../../../node_modules/lodash-es/_parent.js","../../../node_modules/lodash-es/_baseUnset.js","../../../node_modules/lodash-es/_customOmitClone.js","../../../node_modules/lodash-es/omit.js","../../../node_modules/d3-scale/src/log.js","../../../node_modules/d3/node_modules/d3-shape/src/curve/basis.js","../../../node_modules/d3/node_modules/d3-shape/src/curve/basisClosed.js","../../../node_modules/d3/node_modules/d3-shape/src/curve/basisOpen.js","../../../node_modules/d3/node_modules/d3-shape/src/curve/bundle.js","../../../node_modules/d3/node_modules/d3-shape/src/curve/cardinal.js","../../../node_modules/d3/node_modules/d3-shape/src/curve/cardinalClosed.js","../../../node_modules/d3/node_modules/d3-shape/src/curve/cardinalOpen.js","../../../node_modules/d3/node_modules/d3-shape/src/curve/catmullRom.js","../../../node_modules/d3/node_modules/d3-shape/src/curve/catmullRomClosed.js","../../../node_modules/d3/node_modules/d3-shape/src/curve/catmullRomOpen.js","../../../node_modules/d3/node_modules/d3-shape/src/curve/monotone.js","../../../node_modules/d3/node_modules/d3-shape/src/curve/natural.js","../../../node_modules/d3/node_modules/d3-shape/src/curve/step.js","../src/services/canvas-zoom.ts","../src/services/essentials/events.ts","../src/services/essentials/files.ts","../src/services/essentials/transitions.ts","../../../node_modules/date-fns/compareAsc.mjs","../../../node_modules/date-fns/differenceInCalendarYears.mjs","../../../node_modules/date-fns/differenceInYears.mjs","../../../node_modules/date-fns/addMonths.mjs","../../../node_modules/date-fns/addYears.mjs","../../../node_modules/date-fns/subYears.mjs","../../../node_modules/date-fns/differenceInCalendarMonths.mjs","../../../node_modules/date-fns/endOfDay.mjs","../../../node_modules/date-fns/endOfMonth.mjs","../../../node_modules/date-fns/isLastDayOfMonth.mjs","../../../node_modules/date-fns/differenceInMonths.mjs","../../../node_modules/date-fns/subMonths.mjs","../../../node_modules/date-fns/differenceInDays.mjs","../../../node_modules/date-fns/addDays.mjs","../../../node_modules/date-fns/subDays.mjs","../../../node_modules/date-fns/_lib/getRoundingMethod.mjs","../../../node_modules/date-fns/differenceInMilliseconds.mjs","../../../node_modules/date-fns/differenceInHours.mjs","../../../node_modules/date-fns/addMilliseconds.mjs","../../../node_modules/date-fns/addHours.mjs","../../../node_modules/date-fns/subHours.mjs","../../../node_modules/date-fns/differenceInMinutes.mjs","../../../node_modules/date-fns/addMinutes.mjs","../../../node_modules/date-fns/subMinutes.mjs","../../../node_modules/date-fns/differenceInSeconds.mjs","../../../node_modules/date-fns/addSeconds.mjs","../../../node_modules/date-fns/subSeconds.mjs","../src/services/scales-cartesian.ts","../src/services/curves.ts","../src/services/zoom.ts"],"sourcesContent":["import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","import flatten from './flatten.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nexport default flatRest;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","import baseGet from './_baseGet.js';\nimport baseSlice from './_baseSlice.js';\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nexport default parent;\n","import castPath from './_castPath.js';\nimport last from './last.js';\nimport parent from './_parent.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nexport default baseUnset;\n","import isPlainObject from './isPlainObject.js';\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nexport default customOmitClone;\n","import arrayMap from './_arrayMap.js';\nimport baseClone from './_baseClone.js';\nimport baseUnset from './_baseUnset.js';\nimport castPath from './_castPath.js';\nimport copyObject from './_copyObject.js';\nimport customOmitClone from './_customOmitClone.js';\nimport flatRest from './_flatRest.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nexport default omit;\n","import {ticks} from \"d3-array\";\nimport {format, formatSpecifier} from \"d3-format\";\nimport nice from \"./nice.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : x => Math.pow(base, x);\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), x => Math.log(x) / base);\n}\n\nfunction reflect(f) {\n  return (x, k) => -f(-x, k);\n}\n\nexport function loggish(transform) {\n  const scale = transform(transformLog, transformExp);\n  const domain = scale.domain;\n  let base = 10;\n  let logs;\n  let pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = count => {\n    const d = domain();\n    let u = d[0];\n    let v = d[d.length - 1];\n    const r = v < u;\n\n    if (r) ([u, v] = [v, u]);\n\n    let i = logs(u);\n    let j = logs(v);\n    let k;\n    let t;\n    const n = count == null ? 10 : +count;\n    let z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1; k < base; ++k) {\n          t = i < 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1; k >= 1; --k) {\n          t = i > 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = ticks(u, v, n);\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = (count, specifier) => {\n    if (count == null) count = 10;\n    if (specifier == null) specifier = base === 10 ? \"s\" : \",\";\n    if (typeof specifier !== \"function\") {\n      if (!(base % 1) && (specifier = formatSpecifier(specifier)).precision == null) specifier.trim = true;\n      specifier = format(specifier);\n    }\n    if (count === Infinity) return specifier;\n    const k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return d => {\n      let i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = () => {\n    return domain(nice(domain(), {\n      floor: x => pows(Math.floor(logs(x))),\n      ceil: x => pows(Math.ceil(logs(x)))\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  const scale = loggish(transformer()).domain([1, 10]);\n  scale.copy = () => copy(scale, log()).base(scale.base());\n  initRange.apply(scale, arguments);\n  return scale;\n}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // falls through\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop.js\";\nimport {point} from \"./basis.js\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis.js\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis.js\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop.js\";\nimport {point} from \"./cardinal.js\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal.js\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math.js\";\nimport {Cardinal} from \"./cardinal.js\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed.js\";\nimport noop from \"../noop.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // falls through\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { select } from 'd3'\nimport { Service } from './service'\nimport { Events } from '@/interfaces/enums'\nimport { canvasZoomSettings } from '@/configuration'\nimport { DOMUtils } from '@/services/essentials/dom-utils'\n\nexport class CanvasZoom extends Service {\n\tprotected model: any\n\n\t/**\n\t * focal:  object to zoom into\n\t * canvasElements: all the elements to translate and zoom on the chart area\n\t * zoomSettings: object containing duration, easing and zoomlevel for the zoom behaviours\n\t *  */\n\tzoomIn(focal: any, canvasElements: any, zoomSettings?: any) {\n\t\tlet x: number\n\t\tlet y: number\n\t\tlet zoomLevel: number\n\t\tconst settings = zoomSettings ? zoomSettings : canvasZoomSettings\n\n\t\tif (focal) {\n\t\t\tx = focal.x\n\t\t\ty = focal.y\n\t\t\tzoomLevel = 2\n\t\t}\n\n\t\t// the 'viewport' size of the chart\n\t\tconst { width, height } = DOMUtils.getSVGElementSize(this.services.domUtils.getHolder(), {\n\t\t\tuseClientDimensions: true\n\t\t})\n\n\t\tcanvasElements\n\t\t\t.transition()\n\t\t\t.duration(settings.duration)\n\t\t\t.ease(settings.ease)\n\t\t\t.attr(\n\t\t\t\t'transform',\n\t\t\t\t`translate(${width / 2}, ${height / 2}) scale(${zoomLevel}) translate(${-x},${-y})`\n\t\t\t)\n\n\t\t// Dispatch canvas zoom in event\n\t\tthis.services.events.dispatchEvent(Events.CanvasZoom.CANVAS_ZOOM_IN, {\n\t\t\telement: select(focal)\n\t\t})\n\t}\n\n\tzoomOut(canvasElements: any, zoomSettings?: any) {\n\t\tconst settings = zoomSettings ? zoomSettings : canvasZoomSettings\n\t\tcanvasElements\n\t\t\t.transition()\n\t\t\t.duration(settings.duration)\n\t\t\t.ease(settings.ease)\n\t\t\t.attr('transform', '')\n\n\t\t// Dispatch canvas zoom out event\n\t\tthis.services.events.dispatchEvent(Events.CanvasZoom.CANVAS_ZOOM_OUT)\n\t}\n}\n","import { Service } from '@/services/service'\n\nexport class Events extends Service {\n\t// DOM Event target\n\tdocumentFragment: DocumentFragment\n\n\tinit() {\n\t\t// Setup the event fragment on the DOM\n\t\tthis.documentFragment = document.createDocumentFragment()\n\t}\n\n\taddEventListener(type: string, listener: EventListenerOrEventListenerObject) {\n\t\tthis.documentFragment.addEventListener(type, listener)\n\t}\n\n\tremoveEventListener(type: string, listener: EventListenerOrEventListenerObject) {\n\t\tthis.documentFragment.removeEventListener(type, listener)\n\t}\n\n\tdispatchEvent(eventType: string, eventDetail?: object) {\n\t\tlet newEvent: any\n\t\tif (eventDetail) {\n\t\t\tnewEvent = new CustomEvent(eventType, {\n\t\t\t\tdetail: eventDetail\n\t\t\t})\n\t\t} else {\n\t\t\tnewEvent = document.createEvent('Event')\n\t\t\tnewEvent.initEvent(eventType, false, true)\n\t\t}\n\n\t\tthis.documentFragment.dispatchEvent(newEvent)\n\t}\n}\n","import { Service } from '@/services/service'\nimport { ChartModel } from '@/model/model'\n\nexport class Files extends Service {\n\tconstructor(model: ChartModel, services: any) {\n\t\tsuper(model, services)\n\t}\n\n\tdownloadCSV(content: any, filename: string) {\n\t\tconst anchor = document.createElement('a')\n\t\tconst mimeType = 'text/csv;encoding:utf-8'\n\n\t\tif (navigator['msSaveBlob']) {\n\t\t\t// Internet Explorer 10\n\t\t\tnavigator['msSaveBlob'](\n\t\t\t\tnew Blob([content], {\n\t\t\t\t\ttype: mimeType\n\t\t\t\t}),\n\t\t\t\tfilename\n\t\t\t)\n\t\t} else if (URL && 'download' in anchor) {\n\t\t\t// HTML5\n\t\t\tconst href = URL.createObjectURL(\n\t\t\t\tnew Blob([content], {\n\t\t\t\t\ttype: mimeType\n\t\t\t\t})\n\t\t\t)\n\t\t\tanchor.href = href\n\t\t\tanchor.setAttribute('download', filename)\n\n\t\t\t// Add anchor to body\n\t\t\tdocument.body.appendChild(anchor)\n\n\t\t\t// Click anchor\n\t\t\tanchor.click()\n\n\t\t\t// Remove anchor from body\n\t\t\tdocument.body.removeChild(anchor)\n\t\t\tURL.revokeObjectURL(href)\n\t\t} else {\n\t\t\tlocation.href = `data:application/octet-stream,${encodeURIComponent(content)}`\n\t\t}\n\t}\n\n\tdownloadImage(uri: string, name: string) {\n\t\tconst link = document.createElement('a')\n\t\tlink.download = name\n\t\tlink.href = uri\n\t\tdocument.body.appendChild(link)\n\t\tlink.click()\n\t\tdocument.body.removeChild(link)\n\t}\n}\n","import { getProperty } from '@/tools'\nimport { transitions as transitionConfigs } from '@/configuration'\nimport { Service } from '@/services/service'\nimport { Events } from '@/interfaces/enums'\nimport type { Transition } from 'd3'\n\nexport interface setupTransitionConfigs {\n\ttransition?: any // d3 types are causing issues here, hence why using `any`\n\tname?: string\n\tanimate?: boolean\n}\n\nexport class Transitions extends Service {\n\tpendingTransitions: Record<number, Transition<any, any, any, any>> = {}\n\n\tinit() {\n\t\tthis.services.events?.addEventListener(Events.Model.UPDATE, () => {\n\t\t\tthis.pendingTransitions = {}\n\t\t})\n\t}\n\n\tsetupTransition({ transition: t, name, animate }: setupTransitionConfigs) {\n\t\tthis.pendingTransitions[t._id] = t\n\t\tt.on('end interrupt cancel', () => {\n\t\t\tdelete this.pendingTransitions[t._id]\n\t\t})\n\n\t\tif (this.model.getOptions().animations === false || animate === false) {\n\t\t\treturn t.duration(0)\n\t\t}\n\n\t\treturn t.duration(\n\t\t\tgetProperty(transitionConfigs, name, 'duration') || transitionConfigs.default.duration\n\t\t)\n\t}\n\n\tgetPendingTransitions() {\n\t\treturn this.pendingTransitions\n\t}\n}\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const diff = _dateLeft.getTime() - _dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n\n * @returns The number of calendar years\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\nexport function differenceInCalendarYears(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  return _dateLeft.getFullYear() - _dateRight.getFullYear();\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarYears;\n","import { compareAsc } from \"./compareAsc.mjs\";\nimport { differenceInCalendarYears } from \"./differenceInCalendarYears.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full years\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\nexport function differenceInYears(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(differenceInCalendarYears(_dateLeft, _dateRight));\n\n  // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n  _dateLeft.setFullYear(1584);\n  _dateRight.setFullYear(1584);\n\n  // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n  const isLastYearNotFull = compareAsc(_dateLeft, _dateRight) === -sign;\n  const result = sign * (difference - +isLastYearNotFull);\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInYears;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nexport function addMonths(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = constructFrom(date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n\n// Fallback for modularized imports:\nexport default addMonths;\n","import { addMonths } from \"./addMonths.mjs\";\n\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of years to be added.\n *\n * @returns The new date with the years added\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * const result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\nexport function addYears(date, amount) {\n  return addMonths(date, amount * 12);\n}\n\n// Fallback for modularized imports:\nexport default addYears;\n","import { addYears } from \"./addYears.mjs\";\n\n/**\n * @name subYears\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of years to be subtracted.\n *\n * @returns The new date with the years subtracted\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * const result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\nexport function subYears(date, amount) {\n  return addYears(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subYears;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const yearDiff = _dateLeft.getFullYear() - _dateRight.getFullYear();\n  const monthDiff = _dateLeft.getMonth() - _dateRight.getMonth();\n\n  return yearDiff * 12 + monthDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date) {\n  const _date = toDate(date);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { endOfDay } from \"./endOfDay.mjs\";\nimport { endOfMonth } from \"./endOfMonth.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date) {\n  const _date = toDate(date);\n  return +endOfDay(_date) === +endOfMonth(_date);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { compareAsc } from \"./compareAsc.mjs\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.mjs\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(\n    differenceInCalendarMonths(_dateLeft, _dateRight),\n  );\n  let result;\n\n  // Check for the difference of less than month\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (_dateLeft.getMonth() === 1 && _dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      _dateLeft.setDate(30);\n    }\n\n    _dateLeft.setMonth(_dateLeft.getMonth() - sign * difference);\n\n    // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n    let isLastMonthNotFull = compareAsc(_dateLeft, _dateRight) === -sign;\n\n    // Check for cases of one full calendar month\n    if (\n      isLastDayOfMonth(toDate(dateLeft)) &&\n      difference === 1 &&\n      compareAsc(dateLeft, _dateRight) === 1\n    ) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  }\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","import { addMonths } from \"./addMonths.mjs\";\n\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be subtracted.\n *\n * @returns The new date with the months subtracted\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function subMonths(date, amount) {\n  return addMonths(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subMonths;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.trunc(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full days according to the local timezone\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n *\n * @example\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * const result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n * //=> 92\n */\nexport function differenceInDays(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareLocalAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(differenceInCalendarDays(_dateLeft, _dateRight));\n\n  _dateLeft.setDate(_dateLeft.getDate() - sign * difference);\n\n  // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n  const isLastDayNotFull = Number(\n    compareLocalAsc(_dateLeft, _dateRight) === -sign,\n  );\n  const result = sign * (difference - isLastDayNotFull);\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\nfunction compareLocalAsc(dateLeft, dateRight) {\n  const diff =\n    dateLeft.getFullYear() - dateRight.getFullYear() ||\n    dateLeft.getMonth() - dateRight.getMonth() ||\n    dateLeft.getDate() - dateRight.getDate() ||\n    dateLeft.getHours() - dateRight.getHours() ||\n    dateLeft.getMinutes() - dateRight.getMinutes() ||\n    dateLeft.getSeconds() - dateRight.getSeconds() ||\n    dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n\n// Fallback for modularized imports:\nexport default differenceInDays;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { addDays } from \"./addDays.mjs\";\n\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be subtracted.\n *\n * @returns The new date with the days subtracted\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport function subDays(date, amount) {\n  return addDays(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subDays;\n","export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(dateLeft, dateRight) {\n  return +toDate(dateLeft) - +toDate(dateRight);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.mjs\";\nimport { millisecondsInHour } from \"./constants.mjs\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.mjs\";\n\n/**\n * The {@link differenceInHours} function options.\n */\n\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of hours\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * const result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\nexport function differenceInHours(dateLeft, dateRight, options) {\n  const diff =\n    differenceInMilliseconds(dateLeft, dateRight) / millisecondsInHour;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInHours;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of milliseconds to be added.\n *\n * @returns The new date with the milliseconds added\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\nexport function addMilliseconds(date, amount) {\n  const timestamp = +toDate(date);\n  return constructFrom(date, timestamp + amount);\n}\n\n// Fallback for modularized imports:\nexport default addMilliseconds;\n","import { addMilliseconds } from \"./addMilliseconds.mjs\";\nimport { millisecondsInHour } from \"./constants.mjs\";\n\n/**\n * @name addHours\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of hours to be added.\n *\n * @returns The new date with the hours added\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * const result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\nexport function addHours(date, amount) {\n  return addMilliseconds(date, amount * millisecondsInHour);\n}\n\n// Fallback for modularized imports:\nexport default addHours;\n","import { addHours } from \"./addHours.mjs\";\n\n/**\n * @name subHours\n * @category Hour Helpers\n * @summary Subtract the specified number of hours from the given date.\n *\n * @description\n * Subtract the specified number of hours from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of hours to be subtracted.\n *\n * @returns The new date with the hours subtracted\n *\n * @example\n * // Subtract 2 hours from 11 July 2014 01:00:00:\n * const result = subHours(new Date(2014, 6, 11, 1, 0), 2)\n * //=> Thu Jul 10 2014 23:00:00\n */\nexport function subHours(date, amount) {\n  return addHours(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subHours;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.mjs\";\nimport { millisecondsInMinute } from \"./constants.mjs\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.mjs\";\n\n/**\n * The {@link differenceInMinutes} function options.\n */\n\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of minutes\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * const result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are between 10:01:59 and 10:00:00\n * const result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\nexport function differenceInMinutes(dateLeft, dateRight, options) {\n  const diff =\n    differenceInMilliseconds(dateLeft, dateRight) / millisecondsInMinute;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMinutes;\n","import { addMilliseconds } from \"./addMilliseconds.mjs\";\nimport { millisecondsInMinute } from \"./constants.mjs\";\n\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of minutes to be added.\n *\n * @returns The new date with the minutes added\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\nexport function addMinutes(date, amount) {\n  return addMilliseconds(date, amount * millisecondsInMinute);\n}\n\n// Fallback for modularized imports:\nexport default addMinutes;\n","import { addMinutes } from \"./addMinutes.mjs\";\n\n/**\n * @name subMinutes\n * @category Minute Helpers\n * @summary Subtract the specified number of minutes from the given date.\n *\n * @description\n * Subtract the specified number of minutes from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of minutes to be subtracted.\n *\n * @returns The new date with the minutes subtracted\n *\n * @example\n * // Subtract 30 minutes from 10 July 2014 12:00:00:\n * const result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 11:30:00\n */\nexport function subMinutes(date, amount) {\n  return addMinutes(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subMinutes;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.mjs\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.mjs\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(dateLeft, dateRight, options) {\n  const diff = differenceInMilliseconds(dateLeft, dateRight) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n","import { addMilliseconds } from \"./addMilliseconds.mjs\";\n\n/**\n * @name addSeconds\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of seconds to be added.\n *\n * @returns The new date with the seconds added\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * const result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\nexport function addSeconds(date, amount) {\n  return addMilliseconds(date, amount * 1000);\n}\n\n// Fallback for modularized imports:\nexport default addSeconds;\n","import { addSeconds } from \"./addSeconds.mjs\";\n\n/**\n * @name subSeconds\n * @category Second Helpers\n * @summary Subtract the specified number of seconds from the given date.\n *\n * @description\n * Subtract the specified number of seconds from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of seconds to be subtracted.\n *\n * @returns The new date with the seconds subtracted\n *\n * @example\n * // Subtract 30 seconds from 10 July 2014 12:45:00:\n * const result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:44:30\n */\nexport function subSeconds(date, amount) {\n  return addSeconds(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subSeconds;\n","import {\n\textent,\n\tmax,\n\tscaleBand,\n\tscaleLinear,\n\tscaleTime,\n\tscaleLog,\n\ttype ScaleTime,\n\ttype ScaleBand,\n\ttype ScaleLinear\n} from 'd3'\nimport { differenceInYears } from 'date-fns/differenceInYears'\nimport { addYears } from 'date-fns/addYears'\nimport { subYears } from 'date-fns/subYears'\nimport { differenceInMonths } from 'date-fns/differenceInMonths'\nimport { addMonths } from 'date-fns/addMonths'\nimport { subMonths } from 'date-fns/subMonths'\nimport { differenceInDays } from 'date-fns/differenceInDays'\nimport { addDays } from 'date-fns/addDays'\nimport { subDays } from 'date-fns/subDays'\nimport { differenceInHours } from 'date-fns/differenceInHours'\nimport { addHours } from 'date-fns/addHours'\nimport { subHours } from 'date-fns/subHours'\nimport { differenceInMinutes } from 'date-fns/differenceInMinutes'\nimport { addMinutes } from 'date-fns/addMinutes'\nimport { subMinutes } from 'date-fns/subMinutes'\nimport { differenceInSeconds } from 'date-fns/differenceInSeconds'\nimport { subSeconds } from 'date-fns/subSeconds'\nimport { addSeconds } from 'date-fns/addSeconds'\nimport { flatten, omit, uniq } from 'lodash-es'\nimport { getProperty } from '@/tools'\nimport { axis as axisConfigs } from '@/configuration'\nimport { Service } from './service'\nimport { AxisPositions, CartesianOrientations, ScaleTypes } from '@/interfaces/enums'\nimport { ThresholdOptions } from '@/interfaces/components'\n\nexport type ScaleFunction =\n\t| ScaleTime<number, number, never>\n\t| ScaleBand<string>\n\t| ScaleLinear<number, number, never>\n\nexport class CartesianScales extends Service {\n\tprotected scaleTypes = {\n\t\ttop: null as ScaleTypes,\n\t\tright: null as ScaleTypes,\n\t\tbottom: null as ScaleTypes,\n\t\tleft: null as ScaleTypes\n\t}\n\n\tprotected scales = {\n\t\t// null or function\n\t\ttop: null as ScaleLinear<number, number, never>,\n\t\tright: null as ScaleLinear<number, number, never>,\n\t\tbottom: null as ScaleLinear<number, number, never>,\n\t\tleft: null as ScaleLinear<number, number, never>\n\t}\n\n\tprotected domainAxisPosition: AxisPositions\n\tprotected rangeAxisPosition: AxisPositions\n\tprotected secondaryDomainAxisPosition: AxisPositions\n\tprotected secondaryRangeAxisPosition: AxisPositions\n\n\tprotected dualAxes: boolean\n\n\tprotected orientation: CartesianOrientations\n\n\tgetDomainAxisPosition({ datum = null }: { datum?: any } = {}) {\n\t\tif (this.dualAxes && datum) {\n\t\t\tconst options = this.model.getOptions()\n\t\t\tconst { groupMapsTo } = options.data\n\t\t\tconst axesOptions = getProperty(options, 'axes', this.secondaryDomainAxisPosition)\n\t\t\tconst dataset = datum[groupMapsTo]\n\t\t\tif (\n\t\t\t\taxesOptions?.correspondingDatasets &&\n\t\t\t\taxesOptions.correspondingDatasets.includes(dataset)\n\t\t\t) {\n\t\t\t\treturn this.secondaryDomainAxisPosition\n\t\t\t}\n\t\t}\n\t\treturn this.domainAxisPosition\n\t}\n\n\tgetRangeAxisPosition({ datum = null, groups = null }: { datum?: any; groups?: any } = {}) {\n\t\tif (this.dualAxes) {\n\t\t\tconst options = this.model.getOptions()\n\t\t\tconst { groupMapsTo } = options.data\n\t\t\tconst axisOptions = getProperty(options, 'axes', this.secondaryRangeAxisPosition)\n\t\t\tlet dataset\n\t\t\tif (datum !== null) {\n\t\t\t\tdataset = datum[groupMapsTo]\n\t\t\t} else if (groups && groups.length > 0) {\n\t\t\t\tdataset = groups[0]\n\t\t\t}\n\t\t\tif (\n\t\t\t\taxisOptions?.correspondingDatasets &&\n\t\t\t\taxisOptions.correspondingDatasets.includes(dataset)\n\t\t\t) {\n\t\t\t\treturn this.secondaryRangeAxisPosition\n\t\t\t}\n\t\t}\n\t\treturn this.rangeAxisPosition\n\t}\n\n\tgetAxisOptions(position: AxisPositions) {\n\t\treturn getProperty(this.model.getOptions(), 'axes', position)\n\t}\n\n\tgetDomainAxisOptions() {\n\t\tconst domainAxisPosition = this.getDomainAxisPosition()\n\t\treturn this.getAxisOptions(domainAxisPosition)\n\t}\n\n\tgetRangeAxisOptions() {\n\t\tconst rangeAxisPosition = this.getRangeAxisPosition()\n\t\treturn this.getAxisOptions(rangeAxisPosition)\n\t}\n\n\tgetScaleLabel(position: AxisPositions) {\n\t\tconst axisOptions = this.getAxisOptions(position)\n\t\tconst title: string = axisOptions.title\n\t\tif (!title) {\n\t\t\tif (position === AxisPositions.BOTTOM || position === AxisPositions.TOP) {\n\t\t\t\treturn 'x-value'\n\t\t\t}\n\t\t\treturn 'y-value'\n\t\t}\n\t\treturn title\n\t}\n\n\tgetDomainLabel() {\n\t\treturn this.getScaleLabel(this.getDomainAxisPosition())\n\t}\n\n\tgetRangeLabel() {\n\t\treturn this.getScaleLabel(this.getRangeAxisPosition())\n\t}\n\n\tupdate() {\n\t\tthis.determineAxisDuality()\n\t\tthis.findDomainAndRangeAxes()\n\t\tthis.determineOrientation()\n\t\tconst axisPositions: AxisPositions[] = Object.keys(AxisPositions).map(\n\t\t\t(axisPositionKey: string) => AxisPositions[axisPositionKey as keyof typeof AxisPositions]\n\t\t)\n\t\taxisPositions.forEach(axisPosition => {\n\t\t\tthis.scales[axisPosition] = this.createScale(axisPosition) as ScaleLinear<\n\t\t\t\tnumber,\n\t\t\t\tnumber,\n\t\t\t\tnever\n\t\t\t>\n\t\t})\n\t}\n\n\tfindDomainAndRangeAxes() {\n\t\t// find main axes between (left & right) && (bottom & top)\n\t\tconst verticalAxesPositions = this.findVerticalAxesPositions()\n\t\tconst horizontalAxesPositions = this.findHorizontalAxesPositions()\n\n\t\t// Now we have horizontal & vertical main axes to choose domain & range axes from\n\t\tconst domainAndRangeAxesPositions = this.findDomainAndRangeAxesPositions(\n\t\t\tverticalAxesPositions,\n\t\t\thorizontalAxesPositions\n\t\t)\n\n\t\tthis.domainAxisPosition = domainAndRangeAxesPositions.primaryDomainAxisPosition\n\t\tthis.rangeAxisPosition = domainAndRangeAxesPositions.primaryRangeAxisPosition\n\n\t\tif (this.isDualAxes()) {\n\t\t\tthis.secondaryDomainAxisPosition = domainAndRangeAxesPositions.secondaryDomainAxisPosition\n\t\t\tthis.secondaryRangeAxisPosition = domainAndRangeAxesPositions.secondaryRangeAxisPosition\n\t\t}\n\t}\n\n\tdetermineOrientation() {\n\t\tif (\n\t\t\t(this.rangeAxisPosition === AxisPositions.LEFT ||\n\t\t\t\tthis.rangeAxisPosition === AxisPositions.RIGHT) &&\n\t\t\t(this.domainAxisPosition === AxisPositions.BOTTOM ||\n\t\t\t\tthis.domainAxisPosition === AxisPositions.TOP)\n\t\t) {\n\t\t\tthis.orientation = CartesianOrientations.VERTICAL\n\t\t} else {\n\t\t\tthis.orientation = CartesianOrientations.HORIZONTAL\n\t\t}\n\t}\n\n\tisDualAxes() {\n\t\treturn this.dualAxes\n\t}\n\n\t// if any of the axes objects have correspondingDatasets [] asserted we flag the chart as dual axes\n\t// it does not count as dual axes if it just has another axis turned on but is not actually using it to map a dataset\n\tdetermineAxisDuality() {\n\t\tconst options = this.model.getOptions()\n\t\tconst axesOptions = getProperty(options, 'axes')\n\n\t\tif (\n\t\t\t(axesOptions[AxisPositions.LEFT]?.correspondingDatasets &&\n\t\t\t\taxesOptions[AxisPositions.RIGHT]) ||\n\t\t\t(axesOptions[AxisPositions.RIGHT]?.correspondingDatasets &&\n\t\t\t\taxesOptions[AxisPositions.LEFT]) ||\n\t\t\t(axesOptions[AxisPositions.TOP]?.correspondingDatasets &&\n\t\t\t\taxesOptions[AxisPositions.BOTTOM]) ||\n\t\t\t(axesOptions[AxisPositions.BOTTOM]?.correspondingDatasets && axesOptions[AxisPositions.TOP])\n\t\t) {\n\t\t\tthis.dualAxes = true\n\t\t}\n\t}\n\n\tgetCustomDomainValuesByposition(axisPosition: AxisPositions) {\n\t\tconst domain = getProperty(this.model.getOptions(), 'axes', axisPosition, 'domain')\n\n\t\t// Check if domain is an array\n\t\tif (domain && !Array.isArray(domain)) {\n\t\t\tthrow new Error(`Domain in ${axisPosition} axis is not a valid array`)\n\t\t}\n\n\t\t// Determine number of elements passed in domain depending on scale types\n\t\tif (Array.isArray(domain)) {\n\t\t\tif (\n\t\t\t\t(this.scaleTypes[axisPosition] === ScaleTypes.LINEAR ||\n\t\t\t\t\tthis.scaleTypes[axisPosition] === ScaleTypes.TIME) &&\n\t\t\t\tdomain.length !== 2\n\t\t\t) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`There can only be 2 elements in domain for scale type: ${this.scaleTypes[axisPosition]}`\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\n\t\treturn domain\n\t}\n\n\tgetOrientation() {\n\t\treturn this.orientation\n\t}\n\n\tgetScaleByPosition(axisPosition: AxisPositions) {\n\t\treturn this.scales[axisPosition]\n\t}\n\n\tgetScaleTypeByPosition(axisPosition: AxisPositions) {\n\t\treturn this.scaleTypes[axisPosition]\n\t}\n\n\tgetDomainAxisScaleType() {\n\t\tconst domainAxisPosition = this.getDomainAxisPosition()\n\t\treturn this.getScaleTypeByPosition(domainAxisPosition)\n\t}\n\n\tgetRangeAxisScaleType() {\n\t\tconst rangeAxisPosition = this.getRangeAxisPosition()\n\t\treturn this.getScaleTypeByPosition(rangeAxisPosition)\n\t}\n\n\tgetDomainScale() {\n\t\treturn this.scales[this.domainAxisPosition]\n\t}\n\n\tgetRangeScale() {\n\t\treturn this.scales[this.rangeAxisPosition]\n\t}\n\n\t// Find the main x-axis out of the 2 x-axis on the chart (when 2D axis is used)\n\tgetMainXAxisPosition() {\n\t\tconst possibleXAxisPositions = [AxisPositions.BOTTOM, AxisPositions.TOP]\n\n\t\treturn [this.domainAxisPosition, this.rangeAxisPosition].find(\n\t\t\tposition => possibleXAxisPositions.indexOf(position) > -1\n\t\t)\n\t}\n\n\t// Find the main y-axis out of the 2 y-axis on the chart (when 2D axis is used)\n\tgetMainYAxisPosition() {\n\t\tconst possibleYAxisPositions = [AxisPositions.LEFT, AxisPositions.RIGHT]\n\n\t\treturn [this.domainAxisPosition, this.rangeAxisPosition].find(\n\t\t\tposition => possibleYAxisPositions.indexOf(position) > -1\n\t\t)\n\t}\n\n\tgetMainXScale() {\n\t\treturn this.scales[this.getMainXAxisPosition()]\n\t}\n\n\tgetMainYScale() {\n\t\treturn this.scales[this.getMainYAxisPosition()]\n\t}\n\n\tgetValueFromScale(scale: any, scaleType: ScaleTypes, axisPosition: AxisPositions, datum: any) {\n\t\tconst options = this.model.getOptions()\n\t\tconst axesOptions = getProperty(options, 'axes')\n\t\tconst axisOptions = axesOptions[axisPosition]\n\t\tconst { mapsTo } = axisOptions\n\t\tconst value = getProperty(datum, mapsTo) !== null ? datum[mapsTo] : datum\n\t\tlet scaledValue: number\n\t\tswitch (scaleType) {\n\t\t\tcase ScaleTypes.LABELS:\n\t\t\t\tscaledValue = scale(value) + scale.step() / 2\n\t\t\t\tbreak\n\t\t\tcase ScaleTypes.TIME:\n\t\t\t\tscaledValue = scale(new Date(value))\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tscaledValue = scale(value)\n\t\t}\n\t\treturn scaledValue\n\t}\n\n\tgetBoundedScaledValues(datum: any): number[] {\n\t\tconst { bounds } = this.model.getOptions()\n\t\tconst axisPosition = this.getRangeAxisPosition({ datum })\n\t\tconst scale = this.scales[axisPosition]\n\n\t\tconst options = this.model.getOptions()\n\t\tconst axesOptions = getProperty(options, 'axes')\n\t\tconst axisOptions = axesOptions[axisPosition]\n\t\tconst { mapsTo } = axisOptions\n\t\tconst value = datum[mapsTo] !== undefined ? datum[mapsTo] : datum\n\n\t\tconst boundedValues = [\n\t\t\tscale(\n\t\t\t\tgetProperty(datum, bounds.upperBoundMapsTo) !== null\n\t\t\t\t\t? datum[bounds.upperBoundMapsTo]\n\t\t\t\t\t: value\n\t\t\t),\n\t\t\tscale(\n\t\t\t\tgetProperty(datum, bounds.lowerBoundMapsTo) !== null\n\t\t\t\t\t? datum[bounds.lowerBoundMapsTo]\n\t\t\t\t\t: value\n\t\t\t)\n\t\t]\n\n\t\treturn boundedValues\n\t}\n\n\tgetValueThroughAxisPosition(axisPosition: AxisPositions, datum: any) {\n\t\tconst scaleType = this.scaleTypes[axisPosition] as ScaleTypes\n\t\tconst scale = this.scales[axisPosition]\n\n\t\treturn this.getValueFromScale(scale, scaleType, axisPosition, datum)\n\t}\n\n\tgetDomainValue(d: string | object) {\n\t\tconst axisPosition = this.getDomainAxisPosition({ datum: d })\n\t\treturn this.getValueThroughAxisPosition(axisPosition, d)\n\t}\n\n\tgetRangeValue(d: number | string | object) {\n\t\tconst axisPosition = this.getRangeAxisPosition({ datum: d })\n\t\treturn this.getValueThroughAxisPosition(axisPosition, d)\n\t}\n\n\tgetMainXScaleType() {\n\t\treturn this.getScaleTypeByPosition(this.getMainXAxisPosition())\n\t}\n\n\tgetMainYScaleType() {\n\t\treturn this.getScaleTypeByPosition(this.getMainYAxisPosition())\n\t}\n\n\tgetDomainIdentifier(datum?: any) {\n\t\tconst options = this.model.getOptions()\n\t\treturn getProperty(options, 'axes', this.getDomainAxisPosition({ datum: datum }), 'mapsTo')\n\t}\n\n\tgetRangeIdentifier(datum?: any) {\n\t\tconst options = this.model.getOptions()\n\t\treturn getProperty(options, 'axes', this.getRangeAxisPosition({ datum: datum }), 'mapsTo')\n\t}\n\n\textendsDomain(axisPosition: AxisPositions, domain: any) {\n\t\tconst options = this.model.getOptions()\n\t\tconst axisOptions = getProperty(options, 'axes', axisPosition)\n\t\tif (axisOptions.scaleType === ScaleTypes.TIME) {\n\t\t\tconst spaceToAddToEdges = getProperty(options, 'timeScale', 'addSpaceOnEdges')\n\t\t\treturn addSpacingToTimeDomain(domain, spaceToAddToEdges)\n\t\t} else {\n\t\t\treturn addSpacingToContinuousDomain(domain, axisConfigs.paddingRatio, axisOptions.scaleType)\n\t\t}\n\t}\n\n\tprotected findVerticalAxesPositions() {\n\t\tconst options = this.model.getOptions()\n\t\tconst axesOptions = getProperty(options, 'axes')\n\t\tconst dualAxes = this.isDualAxes()\n\n\t\t// If right axis has been specified as `main`\n\t\tif (\n\t\t\t(getProperty(axesOptions, AxisPositions.LEFT) === null &&\n\t\t\t\tgetProperty(axesOptions, AxisPositions.RIGHT) !== null) ||\n\t\t\tgetProperty(axesOptions, AxisPositions.RIGHT, 'main') === true ||\n\t\t\t(dualAxes && getProperty(axesOptions, AxisPositions.LEFT, 'correspondingDatasets'))\n\t\t) {\n\t\t\treturn {\n\t\t\t\tprimary: AxisPositions.RIGHT,\n\t\t\t\tsecondary: AxisPositions.LEFT\n\t\t\t}\n\t\t}\n\n\t\treturn { primary: AxisPositions.LEFT, secondary: AxisPositions.RIGHT }\n\t}\n\n\tprotected findHorizontalAxesPositions() {\n\t\tconst options = this.model.getOptions()\n\t\tconst axesOptions = getProperty(options, 'axes')\n\t\tconst dualAxes = this.isDualAxes()\n\n\t\t// If top axis has been specified as `main`\n\t\tif (\n\t\t\t(getProperty(axesOptions, AxisPositions.BOTTOM) === null &&\n\t\t\t\tgetProperty(axesOptions, AxisPositions.TOP) !== null) ||\n\t\t\tgetProperty(axesOptions, AxisPositions.TOP, 'main') === true ||\n\t\t\t(dualAxes && getProperty(axesOptions, AxisPositions.BOTTOM, 'correspondingDatasets'))\n\t\t) {\n\t\t\treturn {\n\t\t\t\tprimary: AxisPositions.TOP,\n\t\t\t\tsecondary: AxisPositions.BOTTOM\n\t\t\t}\n\t\t}\n\n\t\treturn { primary: AxisPositions.BOTTOM, secondary: AxisPositions.TOP }\n\t}\n\n\tprotected findDomainAndRangeAxesPositions(\n\t\tverticalAxesPositions: any,\n\t\thorizontalAxesPositions: any\n\t) {\n\t\tconst options = this.model.getOptions()\n\n\t\tconst mainVerticalAxisOptions = getProperty(options, 'axes', verticalAxesPositions.primary)\n\t\tconst mainHorizontalAxisOptions = getProperty(options, 'axes', horizontalAxesPositions.primary)\n\n\t\tconst mainVerticalScaleType = mainVerticalAxisOptions.scaleType || ScaleTypes.LINEAR\n\t\tconst mainHorizontalScaleType = mainHorizontalAxisOptions.scaleType || ScaleTypes.LINEAR\n\n\t\tconst result = {\n\t\t\tprimaryDomainAxisPosition: null as AxisPositions,\n\t\t\tsecondaryDomainAxisPosition: null as AxisPositions,\n\t\t\tprimaryRangeAxisPosition: null as AxisPositions,\n\t\t\tsecondaryRangeAxisPosition: null as AxisPositions\n\t\t}\n\n\t\t// assign to to be a vertical chart by default\n\t\tresult.primaryDomainAxisPosition = horizontalAxesPositions.primary\n\t\tresult.primaryRangeAxisPosition = verticalAxesPositions.primary\n\t\t// secondary axes\n\t\tresult.secondaryDomainAxisPosition = horizontalAxesPositions.secondary\n\t\tresult.secondaryRangeAxisPosition = verticalAxesPositions.secondary\n\n\t\t// if neither the horizontal axes are label or time\n\t\t// and atleast  one of the main vertical ones are labels or time then it should be horizontal\n\t\tif (\n\t\t\t(!(\n\t\t\t\tmainHorizontalScaleType === ScaleTypes.LABELS || mainHorizontalScaleType === ScaleTypes.TIME\n\t\t\t) &&\n\t\t\t\tmainVerticalScaleType === ScaleTypes.LABELS) ||\n\t\t\tmainVerticalScaleType === ScaleTypes.TIME\n\t\t) {\n\t\t\tresult.primaryDomainAxisPosition = verticalAxesPositions.primary\n\t\t\tresult.primaryRangeAxisPosition = horizontalAxesPositions.primary\n\t\t\t// secondary axes\n\t\t\tresult.secondaryDomainAxisPosition = verticalAxesPositions.secondary\n\t\t\tresult.secondaryRangeAxisPosition = horizontalAxesPositions.secondary\n\t\t}\n\n\t\treturn result\n\t}\n\n\tgetScaleDomain(axisPosition: AxisPositions) {\n\t\tconst options = this.model.getOptions()\n\t\tconst axisOptions = getProperty(options, 'axes', axisPosition)\n\t\tconst bounds = getProperty(options, 'bounds')\n\t\tconst { includeZero } = axisOptions\n\t\tconst scaleType = getProperty(axisOptions, 'scaleType') || ScaleTypes.LINEAR\n\n\t\tif (this.model.isDataEmpty()) {\n\t\t\treturn []\n\t\t}\n\n\t\tif (axisOptions.binned) {\n\t\t\tconst { bins } = this.model.getBinConfigurations()\n\n\t\t\treturn [0, max(bins, (d: any) => d.length)]\n\t\t} else if (axisOptions.limitDomainToBins) {\n\t\t\tconst { bins } = this.model.getBinConfigurations()\n\t\t\tconst stackKeys = this.model.getStackKeys({ bins })\n\n\t\t\treturn [stackKeys[0].split(':')[0], stackKeys[stackKeys.length - 1].split(':')[1]]\n\t\t}\n\n\t\tconst displayData = this.model.getDisplayData()\n\t\tconst { extendLinearDomainBy, mapsTo, percentage, thresholds } = axisOptions\n\t\tconst { reference: ratioReference, compareTo: ratioCompareTo } = axisConfigs.ratio\n\n\t\t// If domain is specified return that domain\n\t\tif (axisOptions.domain) {\n\t\t\tif (scaleType === ScaleTypes.LABELS) {\n\t\t\t\treturn axisOptions.domain\n\t\t\t} else if (scaleType === ScaleTypes.TIME) {\n\t\t\t\taxisOptions.domain = axisOptions.domain.map((d: any) =>\n\t\t\t\t\td.getTime === undefined ? new Date(d) : d\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn this.extendsDomain(axisPosition, axisOptions.domain)\n\t\t}\n\n\t\t// Return [0, 100] for percentage axis scale\n\t\tif (percentage) {\n\t\t\treturn [0, 100]\n\t\t}\n\n\t\t// If scale is a LABELS scale, return some labels as the domain\n\t\tif (axisOptions && scaleType === ScaleTypes.LABELS) {\n\t\t\t// Get unique values\n\t\t\treturn uniq(displayData.map((d: any) => d[mapsTo]))\n\t\t}\n\n\t\t// Get the extent of the domain\n\t\tlet domain: any\n\t\tlet allDataValues: any\n\t\tconst dataGroupNames = this.model.getDataGroupNames()\n\n\t\tif (scaleType === ScaleTypes.LABELS_RATIO) {\n\t\t\treturn displayData.map((datum: any) => `${datum[ratioReference]}/${datum[ratioCompareTo]}`)\n\t\t} else if (scaleType === ScaleTypes.TIME) {\n\t\t\tallDataValues = displayData.map((datum: any) => +new Date(datum[mapsTo]))\n\t\t} else if (bounds && options.axes) {\n\t\t\tallDataValues = []\n\n\t\t\tdisplayData.forEach((datum: any) => {\n\t\t\t\tallDataValues.push(datum[mapsTo])\n\n\t\t\t\tif (datum[bounds.upperBoundMapsTo]) {\n\t\t\t\t\tallDataValues.push(datum[bounds.upperBoundMapsTo])\n\t\t\t\t}\n\t\t\t\tif (datum[bounds.lowerBoundMapsTo]) {\n\t\t\t\t\tallDataValues.push(datum[bounds.lowerBoundMapsTo])\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (\n\t\t\taxisOptions.stacked === true &&\n\t\t\tdataGroupNames &&\n\t\t\taxisPosition === this.getRangeAxisPosition()\n\t\t) {\n\t\t\tconst { groupMapsTo } = options.data\n\t\t\tconst dataValuesGroupedByKeys = this.model.getDataValuesGroupedByKeys({\n\t\t\t\tgroups: dataGroupNames\n\t\t\t})\n\t\t\tconst nonStackedGroupsData = displayData.filter(\n\t\t\t\t(datum: any) => !dataGroupNames.includes(datum[groupMapsTo])\n\t\t\t)\n\n\t\t\tconst stackedValues: any[] = []\n\t\t\tdataValuesGroupedByKeys.forEach((dataValues: any) => {\n\t\t\t\tconst { ...numericalValues } = dataValues\n\n\t\t\t\tlet positiveSum = 0,\n\t\t\t\t\tnegativeSum = 0\n\t\t\t\tObject.values(omit(numericalValues, 'sharedStackKey')).forEach((value: number) => {\n\t\t\t\t\tif (!isNaN(value)) {\n\t\t\t\t\t\tif (value < 0) {\n\t\t\t\t\t\t\tnegativeSum += value\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositiveSum += value\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tstackedValues.push([negativeSum, positiveSum])\n\t\t\t})\n\n\t\t\tallDataValues = [\n\t\t\t\t...flatten(stackedValues),\n\t\t\t\t...nonStackedGroupsData.map((datum: any) => datum[mapsTo])\n\t\t\t]\n\t\t} else {\n\t\t\tallDataValues = []\n\n\t\t\tdisplayData.forEach((datum: any) => {\n\t\t\t\tconst value = datum[mapsTo]\n\t\t\t\tif (Array.isArray(value) && value.length === 2) {\n\t\t\t\t\tallDataValues.push(value[0])\n\t\t\t\t\tallDataValues.push(value[1])\n\t\t\t\t} else {\n\t\t\t\t\tif (extendLinearDomainBy) {\n\t\t\t\t\t\tallDataValues.push(Math.max(datum[mapsTo], datum[extendLinearDomainBy]))\n\t\t\t\t\t}\n\t\t\t\t\tallDataValues.push(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\t// Time can never be 0 and log of base 0 is -Infinity\n\t\tif (scaleType !== ScaleTypes.TIME && scaleType !== ScaleTypes.LOG && includeZero) {\n\t\t\tallDataValues.push(0)\n\t\t}\n\n\t\t// Add threshold values into the scale\n\t\tif (thresholds && thresholds.length > 0) {\n\t\t\tthresholds.forEach((threshold: any) => {\n\t\t\t\tconst thresholdValue = getProperty(threshold, 'value')\n\t\t\t\tif (thresholdValue !== null) allDataValues.push(thresholdValue)\n\t\t\t})\n\t\t}\n\n\t\tdomain = extent(allDataValues)\n\t\tdomain = this.extendsDomain(axisPosition, domain)\n\n\t\treturn domain\n\t}\n\n\tprotected createScale(axisPosition: AxisPositions) {\n\t\tconst options = this.model.getOptions()\n\t\tconst axisOptions = getProperty(options, 'axes', axisPosition)\n\n\t\tif (!axisOptions) {\n\t\t\treturn null\n\t\t}\n\n\t\tconst scaleType = getProperty(axisOptions, 'scaleType') || ScaleTypes.LINEAR\n\t\tthis.scaleTypes[axisPosition] = scaleType\n\n\t\tlet scale: ScaleFunction\n\t\tif (scaleType === ScaleTypes.TIME) {\n\t\t\tscale = scaleTime()\n\t\t} else if (scaleType === ScaleTypes.LOG) {\n\t\t\tscale = scaleLog().base(axisOptions.base || 10)\n\t\t} else if (scaleType === ScaleTypes.LABELS || scaleType === ScaleTypes.LABELS_RATIO) {\n\t\t\tscale = scaleBand()\n\t\t} else {\n\t\t\tscale = scaleLinear()\n\t\t}\n\n\t\tscale.domain(this.getScaleDomain(axisPosition))\n\n\t\treturn scale\n\t}\n\n\tgetDomainLowerBound(position: any): number {\n\t\tlet domainRange: number[]\n\t\tlet lowerBound = 0\n\n\t\t// get domain ranges based on orientations\n\t\tif (this.getOrientation() === CartesianOrientations.VERTICAL) {\n\t\t\tdomainRange = this.getMainYScale().domain() as number[]\n\t\t} else {\n\t\t\tdomainRange = this.getMainXScale().domain() as number[]\n\t\t}\n\n\t\tif (getProperty(this.model.getOptions(), 'axes', position, 'includeZero') === false) {\n\t\t\t// get domain lowerBound if all are positive values\n\t\t\tif (domainRange[0] > 0 && domainRange[1] > 0) {\n\t\t\t\tlowerBound = domainRange[0]\n\t\t\t}\n\t\t}\n\n\t\treturn lowerBound\n\t}\n\n\tgetHighestDomainThreshold(): null | {\n\t\tthreshold: ThresholdOptions\n\t\tscaleValue: number\n\t} {\n\t\tconst axesOptions = getProperty(this.model.getOptions(), 'axes')\n\t\tconst domainAxisPosition = this.getDomainAxisPosition()\n\n\t\tconst { thresholds } = axesOptions[domainAxisPosition]\n\n\t\t// Check if thresholds exist & is not empty\n\t\tif (!Array.isArray(thresholds) || (Array.isArray(thresholds) && !thresholds.length)) {\n\t\t\treturn null\n\t\t}\n\n\t\tconst domainScale = this.getDomainScale()\n\t\t// Find the highest threshold for the domain\n\t\tconst highestThreshold = thresholds.sort((a, b) => b.value - a.value)[0]\n\n\t\tconst scaleType = this.getScaleTypeByPosition(domainAxisPosition)\n\t\tif (\n\t\t\tscaleType === ScaleTypes.TIME &&\n\t\t\t(typeof highestThreshold.value === 'string' || highestThreshold.value.getTime === undefined)\n\t\t) {\n\t\t\thighestThreshold.value = new Date(highestThreshold.value)\n\t\t}\n\n\t\treturn {\n\t\t\tthreshold: highestThreshold,\n\t\t\tscaleValue: domainScale(highestThreshold.value)\n\t\t}\n\t}\n\n\tgetHighestRangeThreshold(): null | {\n\t\tthreshold: ThresholdOptions\n\t\tscaleValue: number\n\t} {\n\t\tconst axesOptions = getProperty(this.model.getOptions(), 'axes')\n\t\tconst rangeAxisPosition = this.getRangeAxisPosition()\n\n\t\tconst { thresholds } = axesOptions[rangeAxisPosition]\n\n\t\t// Check if thresholds exist & is not empty\n\t\tif (!Array.isArray(thresholds) || (Array.isArray(thresholds) && !thresholds.length)) {\n\t\t\treturn null\n\t\t}\n\n\t\tconst rangeScale = this.getRangeScale()\n\t\t// Find the highest threshold for the range\n\t\tconst highestThreshold = thresholds.sort((a, b) => b.value - a.value)[0]\n\n\t\treturn {\n\t\t\tthreshold: highestThreshold,\n\t\t\tscaleValue: rangeScale(highestThreshold.value)\n\t\t}\n\t}\n}\n\nfunction addSpacingToTimeDomain(domain: any, spaceToAddToEdges: number) {\n\tconst startDate = new Date(domain[0])\n\tconst endDate = new Date(domain[1])\n\n\tif (differenceInYears(endDate, startDate) > 1) {\n\t\treturn [subYears(startDate, spaceToAddToEdges), addYears(endDate, spaceToAddToEdges)]\n\t}\n\n\tif (differenceInMonths(endDate, startDate) > 1) {\n\t\treturn [subMonths(startDate, spaceToAddToEdges), addMonths(endDate, spaceToAddToEdges)]\n\t}\n\n\tif (differenceInDays(endDate, startDate) > 1) {\n\t\treturn [subDays(startDate, spaceToAddToEdges), addDays(endDate, spaceToAddToEdges)]\n\t}\n\n\tif (differenceInHours(endDate, startDate) > 1) {\n\t\treturn [subHours(startDate, spaceToAddToEdges), addHours(endDate, spaceToAddToEdges)]\n\t}\n\n\tif (differenceInMinutes(endDate, startDate) > 30) {\n\t\treturn [\n\t\t\tsubMinutes(startDate, spaceToAddToEdges * 30),\n\t\t\taddMinutes(endDate, spaceToAddToEdges * 30)\n\t\t]\n\t}\n\n\tif (differenceInMinutes(endDate, startDate) > 1) {\n\t\treturn [subMinutes(startDate, spaceToAddToEdges), addMinutes(endDate, spaceToAddToEdges)]\n\t}\n\n\tif (differenceInSeconds(endDate, startDate) > 15) {\n\t\treturn [\n\t\t\tsubSeconds(startDate, spaceToAddToEdges * 15),\n\t\t\taddSeconds(endDate, spaceToAddToEdges * 15)\n\t\t]\n\t}\n\n\tif (differenceInSeconds(endDate, startDate) > 1) {\n\t\treturn [subSeconds(startDate, spaceToAddToEdges), addSeconds(endDate, spaceToAddToEdges)]\n\t}\n\n\treturn [startDate, endDate]\n}\n\nfunction addSpacingToContinuousDomain(\n\t[lower, upper]: number[],\n\tpaddingRatio: number,\n\tscaleType?: ScaleTypes\n) {\n\tconst domainLength = upper - lower\n\tconst padding = domainLength * paddingRatio\n\n\t// If padding crosses 0, keep 0 as new upper bound\n\tconst newUpper = upper <= 0 && upper + padding > 0 ? 0 : upper + padding\n\t// If padding crosses 0, keep 0 as new lower bound\n\tlet newLower = lower >= 0 && lower - padding < 0 ? 0 : lower - padding\n\n\t// Log of base 0 or a negative number is -Infinity\n\tif (scaleType === ScaleTypes.LOG && newLower <= 0) {\n\t\tif (lower <= 0) {\n\t\t\tthrow Error('Data must have values greater than 0 if log scale type is used.')\n\t\t}\n\t\tnewLower = lower\n\t}\n\n\treturn [newLower, newUpper]\n}\n","import {\n\tcurveBasis,\n\tcurveBasisClosed,\n\tcurveBasisOpen,\n\tcurveBundle,\n\tcurveCardinal,\n\tcurveCardinalClosed,\n\tcurveCardinalOpen,\n\tcurveCatmullRom,\n\tcurveCatmullRomClosed,\n\tcurveCatmullRomOpen,\n\tcurveLinear,\n\tcurveLinearClosed,\n\tcurveMonotoneX,\n\tcurveMonotoneY,\n\tcurveNatural,\n\tcurveStep,\n\tcurveStepAfter,\n\tcurveStepBefore\n} from 'd3'\nimport { Service } from './service'\n\nexport class Curves extends Service {\n\tcurveTypes = {\n\t\tcurveLinear,\n\t\tcurveLinearClosed,\n\t\tcurveBasis,\n\t\tcurveBasisClosed,\n\t\tcurveBasisOpen,\n\t\tcurveBundle,\n\t\tcurveCardinal,\n\t\tcurveCardinalClosed,\n\t\tcurveCardinalOpen,\n\t\tcurveCatmullRom,\n\t\tcurveCatmullRomClosed,\n\t\tcurveCatmullRomOpen,\n\t\tcurveMonotoneX,\n\t\tcurveMonotoneY,\n\t\tcurveNatural,\n\t\tcurveStep,\n\t\tcurveStepAfter,\n\t\tcurveStepBefore\n\t}\n\n\tgetD3Curve() {\n\t\tlet curveName = 'curveLinear' as keyof typeof this.curveTypes\n\t\tconst curveOptions = this.model.getOptions().curve\n\n\t\t// Parse curve type whether the user provided a string\n\t\t// Or an object with more options\n\t\tif (curveOptions) {\n\t\t\tif (typeof curveOptions === 'string') {\n\t\t\t\t// curve: 'string'\n\t\t\t\tcurveName = curveOptions as keyof typeof this.curveTypes\n\t\t\t} else {\n\t\t\t\t// curve: { name: 'string' }\n\t\t\t\tcurveName = curveOptions.name\n\t\t\t}\n\t\t}\n\n\t\tif (this.curveTypes[curveName]) {\n\t\t\t// Grab correct d3 curve function\n\t\t\tlet curve = this.curveTypes[curveName] as any\n\n\t\t\t// Apply user-provided options to the d3 curve\n\t\t\tif (curveOptions) {\n\t\t\t\tObject.keys(curveOptions).forEach(optionName => {\n\t\t\t\t\tif (curve[optionName]) {\n\t\t\t\t\t\tcurve = curve[optionName](curveOptions[optionName])\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\treturn curve\n\t\t}\n\n\t\tconsole.warn(`The curve type '${curveName}' is invalid, using 'curveLinear' instead`)\n\t\treturn this.curveTypes['curveLinear']\n\t}\n}\n","import { extent } from 'd3'\nimport { getProperty } from '@/tools'\nimport { zoomBar as zoomBarConfigs } from '@/configuration'\nimport { AxisPositions, Events, ScaleTypes } from '@/interfaces/enums'\nimport { Service } from './service'\n\nimport type { ChartModelCartesian } from '../model'\n\nexport class Zoom extends Service {\n\tprotected model: ChartModelCartesian\n\n\tisZoomBarEnabled() {\n\t\t// CartesianScales service is only available in axis charts\n\t\tif (!this.services.cartesianScales) {\n\t\t\treturn false\n\t\t}\n\n\t\t// @todo - need to update this if zoom bar in other position (bottom, left, right) is supported\n\t\t// check configuration\n\t\tif (!getProperty(this.model.getOptions(), 'zoomBar', 'top', 'enabled')) {\n\t\t\treturn false\n\t\t}\n\n\t\t// @todo - Zoom Bar only supports main axis at BOTTOM axis and time scale for now\n\t\tthis.services.cartesianScales.findDomainAndRangeAxes() // need to do this before getMainXAxisPosition()\n\t\tconst mainXAxisPosition = this.services.cartesianScales.getMainXAxisPosition()\n\t\tconst mainXScaleType = getProperty(\n\t\t\tthis.model.getOptions(),\n\t\t\t'axes',\n\t\t\tmainXAxisPosition,\n\t\t\t'scaleType'\n\t\t)\n\n\t\treturn mainXAxisPosition === AxisPositions.BOTTOM && mainXScaleType === ScaleTypes.TIME\n\t}\n\n\t// get display data for zoom bar\n\t// basically it's sum of value grouped by time\n\tgetZoomBarData() {\n\t\tconst customZoomBarData = this.model.getZoomBarData()\n\n\t\t// if user already defines zoom bar data, use it\n\t\tif (customZoomBarData && customZoomBarData.length > 1) {\n\t\t\treturn customZoomBarData\n\t\t} else {\n\t\t\t// use displayData if not defined\n\t\t\treturn this.model.getDisplayData()\n\t\t}\n\t}\n\n\tgetDefaultZoomBarDomain(zoomBarData?: any) {\n\t\tif (!this.services.zoom) throw new Error('Services zoom not defined')\n\t\tconst allZoomBarData = zoomBarData || this.services.zoom.getZoomBarData()\n\t\tconst { cartesianScales } = this.services\n\t\tif (!cartesianScales) throw new Error('Services cartesianScales undefined')\n\t\tconst mainXAxisPosition = cartesianScales.getMainXAxisPosition()\n\t\tconst domainIdentifier = cartesianScales.getDomainIdentifier()\n\n\t\tconst customDomain = getProperty(this.model.getOptions(), 'axes', mainXAxisPosition, 'domain')\n\n\t\t// return custom domain if exists && valid\n\t\tif (Array.isArray(customDomain) && customDomain.length === 2) {\n\t\t\treturn customDomain\n\t\t}\n\n\t\t// default to full range with extended domain\n\t\tif (!mainXAxisPosition) throw new Error('Not defined: mainXAxisPosition')\n\t\treturn cartesianScales.extendsDomain(\n\t\t\tmainXAxisPosition,\n\t\t\textent(allZoomBarData, (d: any) => d[domainIdentifier])\n\t\t)\n\t}\n\n\thandleDomainChange(newDomain: any, configs = { dispatchEvent: true }) {\n\t\tthis.model.set({ zoomDomain: newDomain }, { animate: false })\n\t\tif (configs.dispatchEvent) {\n\t\t\tthis.services.events?.dispatchEvent(Events.ZoomDomain.CHANGE, {\n\t\t\t\tnewDomain\n\t\t\t})\n\t\t}\n\t}\n\n\tgetZoomRatio() {\n\t\treturn getProperty(this.model.getOptions(), 'zoomBar', 'zoomRatio')\n\t}\n\n\t// filter out data not inside zoom domain\n\t// to get better range value for axis label\n\tfilterDataForRangeAxis(displayData: object[], configs?: any) {\n\t\tconst zoomDomain = this.model.get('zoomDomain')\n\t\tconst mergedConfigs = Object.assign(\n\t\t\t{ stacked: false }, // default configs\n\t\t\tconfigs\n\t\t)\n\t\tconst shouldUpdateRangeAxis = getProperty(this.model.getOptions(), 'zoomBar', 'updateRangeAxis')\n\t\tif (this.isZoomBarEnabled() && shouldUpdateRangeAxis && zoomDomain) {\n\t\t\tconst domainIdentifier = mergedConfigs.stacked\n\t\t\t\t? 'sharedStackKey'\n\t\t\t\t: this.services.cartesianScales?.getDomainIdentifier()\n\t\t\tconst filteredData = displayData.filter(\n\t\t\t\t(datum: any) =>\n\t\t\t\t\tnew Date(datum[domainIdentifier]) >= zoomDomain[0] &&\n\t\t\t\t\tnew Date(datum[domainIdentifier]) <= zoomDomain[1]\n\t\t\t)\n\t\t\t// if no data in zoom domain, use all data to get full range value\n\t\t\t// so only return filteredData if length > 0\n\t\t\tif (filteredData.length > 0) {\n\t\t\t\treturn filteredData\n\t\t\t}\n\t\t}\n\t\t// return original data by default\n\t\treturn displayData\n\t}\n\n\tzoomIn(zoomRatio = this.getZoomRatio()) {\n\t\t// get current zoomDomain\n\t\tconst currentZoomDomain = this.model.get('zoomDomain')\n\t\tconst handleWidth = zoomBarConfigs.handleWidth\n\t\tconst xScale = this.services.cartesianScales?.getMainXScale().copy()\n\t\txScale.domain(this.getDefaultZoomBarDomain()) // reset domain to default full domain\n\n\t\t// use scale range (rather than domain) to calculate\n\t\t// current zoom bar handle x position\n\t\tconst currentX0 = xScale(currentZoomDomain[0])\n\t\tconst currentX1 = xScale(currentZoomDomain[1])\n\n\t\t// zoom bar handles are already too close\n\t\tif (currentX1 - currentX0 < handleWidth + 1) {\n\t\t\treturn\n\t\t}\n\t\tconst fullRange = xScale.range()\n\t\tconst gap = currentX1 - currentX0\n\t\tconst diff = Math.min(((fullRange[1] - fullRange[0]) / 2) * (zoomRatio / 2), gap / 2)\n\n\t\t// new zoom bar handle x position\n\t\tlet newX0 = currentX0 + diff\n\t\tlet newX1 = currentX1 - diff\n\t\t// if left handle becomes right side of right handle, just make them close to each other\n\t\tif (newX0 >= newX1) {\n\t\t\tnewX0 = currentX0 + gap / 2 - handleWidth / 2\n\t\t\tnewX1 = currentX1 - gap / 2 + handleWidth / 2\n\t\t}\n\n\t\tconst newDomain = [xScale.invert(newX0), xScale.invert(newX1)]\n\n\t\t// only if zoomDomain needs update\n\t\tif (\n\t\t\tcurrentZoomDomain[0].valueOf() !== newDomain[0].valueOf() ||\n\t\t\tcurrentZoomDomain[1].valueOf() !== newDomain[1].valueOf()\n\t\t) {\n\t\t\tthis.handleDomainChange(newDomain)\n\t\t}\n\t}\n\n\tzoomOut(zoomRatio = this.getZoomRatio()) {\n\t\t// get current zoomDomain\n\t\tconst currentZoomDomain = this.model.get('zoomDomain')\n\n\t\tif (!this.services.cartesianScales) throw new Error('Services cartesianScales undefined')\n\t\tconst xScale = this.services.cartesianScales.getMainXScale().copy()\n\n\t\txScale.domain(this.getDefaultZoomBarDomain()) // reset domain to default full domain\n\n\t\t// use scale range (rather than domain) to calculate\n\t\t// current zoom bar handle x position\n\t\tconst currentX0 = xScale(currentZoomDomain[0])\n\t\tconst currentX1 = xScale(currentZoomDomain[1])\n\n\t\tconst fullRange = xScale.range()\n\t\tconst diff = ((fullRange[1] - fullRange[0]) / 2) * (zoomRatio / 2)\n\n\t\t// new zoom bar handle x position\n\t\t// max to full range\n\t\tconst newX0 = Math.max(currentX0 - diff, fullRange[0])\n\t\tconst newX1 = Math.min(currentX1 + diff, fullRange[1])\n\n\t\tconst newDomain = [xScale.invert(newX0), xScale.invert(newX1)]\n\n\t\t// only if zoomDomain needs update\n\t\tif (\n\t\t\tcurrentZoomDomain[0].valueOf() !== newDomain[0].valueOf() ||\n\t\t\tcurrentZoomDomain[1].valueOf() !== newDomain[1].valueOf()\n\t\t) {\n\t\t\tthis.handleDomainChange(newDomain)\n\t\t}\n\t}\n\n\tresetZoomDomain() {\n\t\t// get current zoomDomain\n\t\tconst currentZoomDomain = this.model.get('zoomDomain')\n\t\tconst newDomain = this.getDefaultZoomBarDomain()\n\n\t\t// only if zoomDomain needs update\n\t\tif (\n\t\t\tcurrentZoomDomain[0].valueOf() !== newDomain[0].valueOf() ||\n\t\t\tcurrentZoomDomain[1].valueOf() !== newDomain[1].valueOf()\n\t\t) {\n\t\t\tthis.handleDomainChange(newDomain)\n\t\t}\n\t}\n\n\t// check if current zoom domain is already the min zoom domain\n\t// when toolbar is rendered, we don't render chart yet\n\t// don't depend on scale range\n\tisMinZoomDomain() {\n\t\t// get current zoomDomain\n\t\tconst currentZoomDomain = this.model.get('zoomDomain')\n\t\t// assume the max zoom domain is the default zoom bar domain\n\t\tconst maxZoomDomain = this.getDefaultZoomBarDomain()\n\t\tif (!currentZoomDomain || !maxZoomDomain) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst currentZoomDomainPeriod = currentZoomDomain[1].valueOf() - currentZoomDomain[0].valueOf()\n\t\tconst maxZoomDomainPeriod = maxZoomDomain[1].valueOf() - maxZoomDomain[0].valueOf()\n\t\tconst minZoomRatio = getProperty(this.model.getOptions(), 'zoomBar', 'minZoomRatio')\n\t\t// if current zoom domain is already smaller than minZoomRatio\n\t\tif (currentZoomDomainPeriod / maxZoomDomainPeriod < minZoomRatio) {\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\t// check if current zoom domain is already the max zoom domain\n\tisMaxZoomDomain() {\n\t\t// get current zoom domain\n\t\tconst currentZoomDomain = this.model.get('zoomDomain')\n\t\t// assume the max zoom domain is the default zoom bar domain\n\t\tconst maxZoomDomain = this.getDefaultZoomBarDomain()\n\n\t\tif (\n\t\t\tcurrentZoomDomain &&\n\t\t\tmaxZoomDomain &&\n\t\t\tcurrentZoomDomain[0].valueOf() === maxZoomDomain[0].valueOf() &&\n\t\t\tcurrentZoomDomain[1].valueOf() === maxZoomDomain[1].valueOf()\n\t\t) {\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tisEmptyState() {\n\t\treturn this.getZoomBarData().length === 0\n\t}\n\n\tisZoomBarLoading(position: any) {\n\t\treturn getProperty(this.model.getOptions(), 'zoomBar', position, 'loading')\n\t}\n\n\tisZoomBarLocked(position: any) {\n\t\treturn getProperty(this.model.getOptions(), 'zoomBar', position, 'locked')\n\t}\n}\n"],"names":["flatten","array","length","baseFlatten","flatRest","func","setToString","overRest","baseSlice","start","end","index","result","parent","object","path","baseGet","baseUnset","castPath","toKey","last","customOmitClone","value","isPlainObject","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","omit","paths","isDeep","arrayMap","copyObject","getAllKeysIn","baseClone","transformLog","x","transformExp","transformLogn","transformExpn","pow10","powp","base","logp","reflect","f","k","loggish","transform","scale","domain","logs","pows","rescale","_","count","d","u","v","r","i","j","t","n","z","ticks","specifier","formatSpecifier","format","nice","log","transformer","copy","initRange","point","that","y","Basis","context","curveBasis","BasisClosed","noop","curveBasisClosed","BasisOpen","x0","y0","curveBasisOpen","Bundle","beta","dx","dy","curveBundle","custom","bundle","Cardinal","tension","curveCardinal","cardinal","CardinalClosed","curveCardinalClosed","CardinalOpen","curveCardinalOpen","x1","y1","x2","y2","epsilon","a","b","m","CatmullRom","alpha","x23","y23","curveCatmullRom","catmullRom","CatmullRomClosed","curveCatmullRomClosed","CatmullRomOpen","curveCatmullRomOpen","sign","slope3","h0","h1","s0","s1","p","slope2","h","t0","t1","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","px","controlPoints","py","i0","i1","curveNatural","Step","curveStep","stepBefore","stepAfter","CanvasZoom","Service","focal","canvasElements","zoomSettings","zoomLevel","settings","canvasZoomSettings","width","height","DOMUtils","Events","select","type","listener","eventType","eventDetail","newEvent","Files","model","services","content","filename","anchor","mimeType","href","uri","name","link","Transitions","_a","animate","getProperty","transitionConfigs","compareAsc","dateLeft","dateRight","_dateLeft","toDate","_dateRight","diff","differenceInCalendarYears","differenceInYears","difference","isLastYearNotFull","addMonths","date","amount","_date","constructFrom","dayOfMonth","endOfDesiredMonth","daysInMonth","addYears","subYears","differenceInCalendarMonths","yearDiff","monthDiff","endOfDay","endOfMonth","month","isLastDayOfMonth","differenceInMonths","isLastMonthNotFull","subMonths","differenceInDays","compareLocalAsc","differenceInCalendarDays","isLastDayNotFull","addDays","subDays","getRoundingMethod","method","number","differenceInMilliseconds","differenceInHours","options","millisecondsInHour","addMilliseconds","timestamp","addHours","subHours","differenceInMinutes","millisecondsInMinute","addMinutes","subMinutes","differenceInSeconds","addSeconds","subSeconds","CartesianScales","datum","groupMapsTo","axesOptions","dataset","groups","axisOptions","position","domainAxisPosition","rangeAxisPosition","title","AxisPositions","axisPositionKey","axisPosition","verticalAxesPositions","horizontalAxesPositions","domainAndRangeAxesPositions","CartesianOrientations","_b","_c","_d","ScaleTypes","possibleXAxisPositions","possibleYAxisPositions","scaleType","mapsTo","scaledValue","bounds","spaceToAddToEdges","addSpacingToTimeDomain","addSpacingToContinuousDomain","axisConfigs","dualAxes","mainVerticalAxisOptions","mainHorizontalAxisOptions","mainVerticalScaleType","mainHorizontalScaleType","includeZero","bins","max","stackKeys","displayData","extendLinearDomainBy","percentage","thresholds","ratioReference","ratioCompareTo","uniq","allDataValues","dataGroupNames","dataValuesGroupedByKeys","nonStackedGroupsData","stackedValues","dataValues","numericalValues","positiveSum","negativeSum","threshold","thresholdValue","extent","scaleTime","scaleLog","scaleBand","scaleLinear","domainRange","lowerBound","domainScale","highestThreshold","rangeScale","startDate","endDate","lower","upper","paddingRatio","padding","newUpper","newLower","Curves","curveLinear","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveStepAfter","curveStepBefore","curveName","curveOptions","curve","optionName","Zoom","mainXAxisPosition","mainXScaleType","customZoomBarData","zoomBarData","allZoomBarData","cartesianScales","domainIdentifier","customDomain","newDomain","configs","zoomDomain","mergedConfigs","shouldUpdateRangeAxis","filteredData","zoomRatio","currentZoomDomain","handleWidth","zoomBarConfigs","xScale","currentX0","currentX1","fullRange","gap","newX0","newX1","maxZoomDomain","currentZoomDomainPeriod","maxZoomDomainPeriod","minZoomRatio"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51]}